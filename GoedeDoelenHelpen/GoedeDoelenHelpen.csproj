<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>netcoreapp2.1</TargetFramework>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <IsPackable>false</IsPackable>
    <SpaRoot>ReactApp\</SpaRoot>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
    <UserSecretsId>ff8e2c92-6555-4e54-8a15-442047b66f00</UserSecretsId>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.AspNetCore.App" Version="2.1.0-preview1-final" />
    <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="2.1.0-preview1-final" />
    <PackageReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Design" Version="2.1.0-preview1-final" />
    <PackageReference Include="SendGrid" Version="9.9.0" />
    <PackageReference Include="Swashbuckle.AspNetCore" Version="2.3.0" />
  </ItemGroup>

  <ItemGroup>
    <DotNetCliToolReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Tools" Version="2.1.0-preview1-final" />
    <DotNetCliToolReference Include="Microsoft.Extensions.SecretManager.Tools" Version="2.0.0" />
  </ItemGroup>

  <ItemGroup>
    <!-- Don't publish the SPA source files, but do show them in the project files list -->
    <Content Remove="$(SpaRoot)**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
  </ItemGroup>

  <ItemGroup>
    <None Remove="ReactApp\src\App.test.tsx" />
    <None Remove="ReactApp\src\App.tsx" />
    <None Remove="ReactApp\src\baseWrapper.ts" />
    <None Remove="ReactApp\src\Client.ts" />
    <None Remove="ReactApp\src\index.tsx" />
    <None Remove="ReactApp\src\pages\about.tsx" />
    <None Remove="ReactApp\src\pages\Home.tsx" />
    <None Remove="ReactApp\src\pages\Login.tsx" />
    <None Remove="ReactApp\src\pages\Logout.tsx" />
    <None Remove="ReactApp\src\pages\Page404.tsx" />
    <None Remove="ReactApp\src\pages\register.tsx" />
    <None Remove="ReactApp\src\pages\Topics\index.tsx" />
    <None Remove="ReactApp\src\registerServiceWorker.ts" />
    <None Remove="ReactApp\tsconfig.json" />
  </ItemGroup>

  <ItemGroup>
    <Content Include="ReactApp\tsconfig.json" />
  </ItemGroup>

  <ItemGroup>
    <TypeScriptCompile Include="ReactApp\src\App.test.tsx" />
    <TypeScriptCompile Include="ReactApp\src\App.tsx" />
    <TypeScriptCompile Include="ReactApp\src\baseWrapper.ts" />
    <TypeScriptCompile Include="ReactApp\src\Client.ts" />
    <TypeScriptCompile Include="ReactApp\src\index.tsx" />
    <TypeScriptCompile Include="ReactApp\src\pages\about.tsx" />
    <TypeScriptCompile Include="ReactApp\src\pages\Home.tsx" />
    <TypeScriptCompile Include="ReactApp\src\pages\Login.tsx" />
    <TypeScriptCompile Include="ReactApp\src\pages\Logout.tsx" />
    <TypeScriptCompile Include="ReactApp\src\pages\Page404.tsx" />
    <TypeScriptCompile Include="ReactApp\src\pages\register.tsx" />
    <TypeScriptCompile Include="ReactApp\src\pages\Topics\index.tsx" />
    <TypeScriptCompile Include="ReactApp\src\registerServiceWorker.ts" />
  </ItemGroup>

  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
  </Target>

  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build" />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)build\**; $(SpaRoot)build-ssr\**" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>

  <PropertyGroup Condition="'$(Configuration)' == 'Debug'">
    <TypeScriptTarget>ES2015</TypeScriptTarget>
    <TypeScriptJSXEmit>None</TypeScriptJSXEmit>
    <TypeScriptModuleKind>ES6</TypeScriptModuleKind>
    <TypeScriptCompileOnSaveEnabled>True</TypeScriptCompileOnSaveEnabled>
    <TypeScriptNoImplicitAny>False</TypeScriptNoImplicitAny>
    <TypeScriptRemoveComments>False</TypeScriptRemoveComments>
    <TypeScriptOutFile />
    <TypeScriptOutDir />
    <TypeScriptGeneratesDeclarations>False</TypeScriptGeneratesDeclarations>
    <TypeScriptNoEmitOnError>True</TypeScriptNoEmitOnError>
    <TypeScriptSourceMap>True</TypeScriptSourceMap>
    <TypeScriptMapRoot />
    <TypeScriptSourceRoot />
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
    <DocumentationFile>bin\Debug\netcoreapp2.1\GoedeDoelenHelpen.xml</DocumentationFile>
  </PropertyGroup>

</Project>
